import argparse
import json

from ..utils.metrics import mrr_k, evaluate, judged_k, ndcgcut


def load_and_evaluate(qrel_file_path, run_file_path, metric, agg=True):
    with open(qrel_file_path) as reader:
        qrel = json.load(reader)
    with open(run_file_path) as reader:
        run = json.load(reader)

    # qrel_clean = {}
    # for topic, rels in qrel.items(): 
    # #     # in = shift
    # #     # ikat 
    # #     if topic not in ['72', '314', '113', '288', '206', '92', '209', '60', '286', '158', '83', '68', '133', '124', '260', '62', '110', '118', '172', '7', '322', '159', '48', '208', '323', '148', '303', '308', '203', '126', '291', '79', '257', '185', '20', '186', '26', '182', '264', '218', '138', '24', '253', '51', '176', '233', '255', '165', '2', '230', '281', '134', '231', '32', '70', '69', '307', '37', '220', '163', '16', '19', '74', '324', '179', '66', '9', '12', '285', '312', '10', '97', '28', '59', '14', '248', '31', '85', '137', '112', '136', '58', '3', '167', '175', '222', '178', '223', '108', '41', '143', '142', '23', '162', '213', '141', '170', '161', '184', '128', '106']:
    # #     # topiocqa
    #     if topic not in ['4', '7', '12', '16', '17', '18', '20', '23', '34', '43', '45', '46', '49', '52', '56', '59', '60', '62', '64', '71', '75', '79', '86', '89', '92', '97', '101', '103', '111', '114', '116', '120', '126', '135', '142', '152', '156', '160', '163', '178', '179', '184', '190', '196', '202', '205', '215', '218', '228', '232', '238', '241', '243', '244', '245', '256', '257', '259', '267', '278', '282', '293', '294', '299', '308', '315', '326', '334', '339', '343', '344', '345', '353', '354', '365', '371', '375', '380', '389', '397', '405', '407', '408', '418', '424', '426', '434', '446', '448', '451', '454', '457', '459', '460', '462', '474', '478', '480', '488', '492', '496', '500', '503', '508', '513', '515', '518', '519', '525', '526', '528', '530', '535', '540', '550', '553', '559', '563', '568', '571', '575', '579', '582', '586', '596', '599', '610', '621', '625', '630', '633', '635', '636', '637', '644', '659', '675', '679', '680', '682', '685', '687', '688', '692', '704', '705', '713', '715', '717', '723', '730', '733', '734', '741', '744', '747', '756', '758', '763', '769', '772', '779', '790', '799', '803', '813', '821', '827', '834', '835', '837', '838', '845', '849', '857', '859', '871', '873', '876', '879', '881', '884', '885', '887', '891', '897', '898', '900', '902', '904', '911', '916', '918', '921', '924', '930', '937', '939', '942', '950', '953', '955', '957', '960', '966', '969', '972', '978', '982', '984', '987', '993', '1004', '1010', '1022', '1024', '1027', '1044', '1045', '1056', '1058', '1062', '1070', '1074', '1077', '1081', '1084', '1086', '1090', '1097', '1098', '1102', '1111', '1113', '1115', '1121', '1125', '1133', '1134', '1141', '1142', '1144', '1152', '1153', '1157', '1158', '1164', '1167', '1169', '1172', '1173', '1179', '1182', '1185', '1194', '1198', '1199', '1204', '1205', '1209', '1210', '1215', '1227', '1235', '1237', '1241', '1244', '1261', '1264', '1265', '1269', '1271', '1273', '1277', '1279', '1282', '1285', '1293', '1296', '1302', '1304', '1306', '1308', '1311', '1316', '1317', '1326', '1330', '1334', '1340', '1346', '1353', '1355', '1360', '1363', '1370', '1373', '1378', '1381', '1385', '1391', '1392', '1398', '1402', '1405', '1407', '1417', '1430', '1431', '1442', '1445', '1450', '1453', '1456', '1459', '1461', '1463', '1466', '1469', '1473', '1475', '1480', '1486', '1489', '1492', '1498', '1504', '1507', '1509', '1514', '1516', '1518', '1520', '1521', '1522', '1523', '1527', '1528', '1531', '1534', '1538', '1541', '1553', '1557', '1569', '1572', '1574', '1575', '1577', '1583', '1586', '1590', '1599', '1608', '1611', '1613', '1623', '1626', '1630', '1635', '1640', '1642', '1647', '1649', '1650', '1652', '1653', '1656', '1667', '1672', '1676', '1683', '1685', '1690', '1697', '1701', '1704', '1707', '1716', '1724', '1725', '1733', '1734', '1737', '1741', '1747', '1753', '1764', '1772', '1774', '1781', '1782', '1785', '1788', '1798', '1801', '1806', '1808', '1810', '1811', '1814', '1816', '1818', '1821', '1825', '1827', '1829', '1856', '1857', '1858', '1859', '1864', '1865', '1872', '1874', '1877', '1883', '1887', '1890', '1892', '1901', '1905', '1912', '1914', '1916', '1918', '1921', '1924', '1927', '1931', '1935', '1937', '1938', '1941', '1943', '1948', '1955', '1961', '1964', '1967', '1978', '1987', '1990', '1997', '2001', '2002', '2007', '2008', '2011', '2014', '2015', '2031', '2034', '2037', '2045', '2053', '2056', '2066', '2074', '2077', '2082', '2090', '2102', '2104', '2107', '2110', '2117', '2119', '2121', '2124', '2130', '2139', '2150', '2159', '2162', '2171', '2172', '2173', '2178', '2183', '2186', '2189', '2190', '2193', '2195', '2198', '2207', '2213', '2219', '2221', '2224', '2231', '2233', '2236', '2238', '2247', '2258', '2261', '2262', '2273', '2280', '2285', '2291', '2294', '2297', '2299', '2314', '2323', '2333', '2337', '2340', '2344', '2352', '2357', '2364', '2367', '2369', '2372', '2373', '2377', '2383', '2386', '2390', '2394', '2413', '2416', '2422', '2431', '2435', '2438', '2439', '2443', '2446', '2450', '2461', '2464', '2472', '2482', '2487', '2489', '2495', '2500', '2501', '2507', '2509', '2512']:
    #         qrel_clean[topic] = rels
    # qrel = qrel_clean
    # for trec, qrel_binary.json should be used for recall etc., qrel.json for NDCG.
    # if qrel.json is used for binary metrics, the binary 'splits' are not correct
    if "TREC" in qrel_file_path:
        assert ("binary" not in qrel_file_path) == (metric == "ndcg" or metric == "ndcg_cut")
    if metric == "mrr_10":
        res = mrr_k(run, qrel, k=10, agg=agg)
        if agg:
            print("MRR@10:", res)
        return {"mrr_10": res}
    elif metric == "mrr_1000":
        res = mrr_k(run, qrel, k=1000, agg=agg)
        if agg:
            print("MRR@1000:", res)
        return {"mrr_1000": res}
    elif metric == "judged@10":
        res = judged_k(run, qrel, k=10)
        if agg:
            print("judged@10:", res)
        return {"judged@10": res}
    elif metric == "judged@100":
        res = judged_k(run, qrel, k=100)
        if agg:
            print("judged@100:", res)
        return {"judged@100": res}
    elif metric == "judged@1000":
        res = judged_k(run, qrel, k=1000)
        if agg:
            print("judged@1000:", res)
        return {"judged@1000": res}
    elif metric == "ndcg@3":
        if agg:
            res = ndcgcut(run, qrel, k=3)[1] # 0 is not agg, 1 is agg
            print("ndcg@3:", res)
        else:
            res = ndcgcut(run, qrel, k=3)[0]
        return {"ndcg@3": res}
    else:
        res = evaluate(run, qrel, metric=metric, agg=agg)
        if agg:
            print(metric, "==>", res)
        return res


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--qrel_file_path")
    parser.add_argument("--run_file_path")
    parser.add_argument("--metric", default="mrr_10")
    args = parser.parse_args()
    load_and_evaluate(args.qrel_file_path, args.run_file_path, args.metric)
